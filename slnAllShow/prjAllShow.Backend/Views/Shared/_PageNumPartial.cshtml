@inject IHtmlLocalizer<SharedResources> _localizer

@{
    bool HasPreviousPage = (bool)ViewData["HasPreviousPage"];
    bool HasNextPage = (bool)ViewData["HasNextPage"];
    int PageIndex = (int)ViewData["PageIndex"];
    int TotalPages = (int)ViewData["TotalPages"];

    var prevDisabled = !HasPreviousPage ? "disabled" : "";
    var nextDisabled = !HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-route-pageNumber="@(PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-default @prevDisabled">
    @_localizer["Page.Previous"]
</a>

@{
    int showPage = 10;
    int pageTotal = TotalPages;
    int currentPage = PageIndex;
    if (currentPage > pageTotal) {
        currentPage = pageTotal;
    }

    int currentPageTag = (int)Math.Ceiling((decimal)currentPage / showPage);
    List<int> pageCurrentItem = new List<int>();
    int minPage = currentPageTag * showPage - showPage + 1;
    int maxPage = currentPageTag * showPage;

    for (int i = 1; i < pageTotal + 1; i++) {
        if (i >= minPage && i <= maxPage) {
            pageCurrentItem.Add(i);
        }
    }

    int index = 0;
    foreach (var num in pageCurrentItem)
    {
        index++;
        <span class="numberCircle" name="sapnCircle" id="sapnCircle_@index"><span name="spanNum">@num</span></span>
    }
}

 <a asp-action="Index"
    asp-route-pageNumber="@(PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-default @nextDisabled">
    @_localizer["Page.Next"]
</a>